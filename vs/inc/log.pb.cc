// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: log.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "log.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace UTIL_LOG {
class MsgLogFileDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MsgLogFile>
     _instance;
} _MsgLogFile_default_instance_;
class MsgLogContentDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MsgLogContent>
     _instance;
} _MsgLogContent_default_instance_;
class MsgLogControlDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MsgLogControl>
     _instance;
} _MsgLogControl_default_instance_;

namespace protobuf_log_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogFile, headmode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogFile, file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogFile, day_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogFile, size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogContent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogContent, file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogContent, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogControl, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogControl, cmdflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogControl, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLogControl, data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(MsgLogFile)},
  { 9, -1, sizeof(MsgLogContent)},
  { 16, -1, sizeof(MsgLogControl)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgLogFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgLogContent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgLogControl_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "log.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _MsgLogFile_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MsgLogFile_default_instance_);_MsgLogContent_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MsgLogContent_default_instance_);_MsgLogControl_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MsgLogControl_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tlog.proto\022\010UTIL_LOG\"G\n\nMsgLogFile\022\020\n\010H"
      "eadMode\030\001 \001(\r\022\014\n\004File\030\002 \001(\t\022\013\n\003Day\030\003 \001(\r"
      "\022\014\n\004Size\030\004 \001(\r\".\n\rMsgLogContent\022\014\n\004File\030"
      "\001 \001(\t\022\017\n\007Content\030\002 \001(\t\"\243\001\n\rMsgLogControl"
      "\022,\n\003Cmd\030\001 \001(\0162\037.UTIL_LOG.MsgLogControl.C"
      "mdType\022\017\n\007CmdFlag\030\002 \001(\r\022\021\n\tTimestamp\030\003 \001"
      "(\r\022\014\n\004Data\030\004 \001(\014\"2\n\007CmdType\022\021\n\rCMD_TYPE_"
      "NONE\020\000\022\024\n\020CMD_TYPE_NEW_LOG\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 316);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "log.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_log_2eproto

const ::google::protobuf::EnumDescriptor* MsgLogControl_CmdType_descriptor() {
  protobuf_log_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_log_2eproto::file_level_enum_descriptors[0];
}
bool MsgLogControl_CmdType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MsgLogControl_CmdType MsgLogControl::CMD_TYPE_NONE;
const MsgLogControl_CmdType MsgLogControl::CMD_TYPE_NEW_LOG;
const MsgLogControl_CmdType MsgLogControl::CmdType_MIN;
const MsgLogControl_CmdType MsgLogControl::CmdType_MAX;
const int MsgLogControl::CmdType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgLogFile::kHeadModeFieldNumber;
const int MsgLogFile::kFileFieldNumber;
const int MsgLogFile::kDayFieldNumber;
const int MsgLogFile::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgLogFile::MsgLogFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_log_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UTIL_LOG.MsgLogFile)
}
MsgLogFile::MsgLogFile(const MsgLogFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file().size() > 0) {
    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  ::memcpy(&headmode_, &from.headmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&headmode_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:UTIL_LOG.MsgLogFile)
}

void MsgLogFile::SharedCtor() {
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&headmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&headmode_)) + sizeof(size_));
  _cached_size_ = 0;
}

MsgLogFile::~MsgLogFile() {
  // @@protoc_insertion_point(destructor:UTIL_LOG.MsgLogFile)
  SharedDtor();
}

void MsgLogFile::SharedDtor() {
  file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgLogFile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgLogFile::descriptor() {
  protobuf_log_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_log_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgLogFile& MsgLogFile::default_instance() {
  protobuf_log_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgLogFile* MsgLogFile::New(::google::protobuf::Arena* arena) const {
  MsgLogFile* n = new MsgLogFile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgLogFile::Clear() {
// @@protoc_insertion_point(message_clear_start:UTIL_LOG.MsgLogFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&headmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&headmode_)) + sizeof(size_));
  _internal_metadata_.Clear();
}

bool MsgLogFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UTIL_LOG.MsgLogFile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 HeadMode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &headmode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string File = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file().data(), static_cast<int>(this->file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UTIL_LOG.MsgLogFile.File"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Day = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UTIL_LOG.MsgLogFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UTIL_LOG.MsgLogFile)
  return false;
#undef DO_
}

void MsgLogFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UTIL_LOG.MsgLogFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HeadMode = 1;
  if (this->headmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->headmode(), output);
  }

  // string File = 2;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UTIL_LOG.MsgLogFile.File");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file(), output);
  }

  // uint32 Day = 3;
  if (this->day() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->day(), output);
  }

  // uint32 Size = 4;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UTIL_LOG.MsgLogFile)
}

::google::protobuf::uint8* MsgLogFile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UTIL_LOG.MsgLogFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HeadMode = 1;
  if (this->headmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->headmode(), target);
  }

  // string File = 2;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UTIL_LOG.MsgLogFile.File");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file(), target);
  }

  // uint32 Day = 3;
  if (this->day() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->day(), target);
  }

  // uint32 Size = 4;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UTIL_LOG.MsgLogFile)
  return target;
}

size_t MsgLogFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UTIL_LOG.MsgLogFile)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string File = 2;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file());
  }

  // uint32 HeadMode = 1;
  if (this->headmode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->headmode());
  }

  // uint32 Day = 3;
  if (this->day() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->day());
  }

  // uint32 Size = 4;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgLogFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UTIL_LOG.MsgLogFile)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgLogFile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgLogFile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UTIL_LOG.MsgLogFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UTIL_LOG.MsgLogFile)
    MergeFrom(*source);
  }
}

void MsgLogFile::MergeFrom(const MsgLogFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UTIL_LOG.MsgLogFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.headmode() != 0) {
    set_headmode(from.headmode());
  }
  if (from.day() != 0) {
    set_day(from.day());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void MsgLogFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UTIL_LOG.MsgLogFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLogFile::CopyFrom(const MsgLogFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UTIL_LOG.MsgLogFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLogFile::IsInitialized() const {
  return true;
}

void MsgLogFile::Swap(MsgLogFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgLogFile::InternalSwap(MsgLogFile* other) {
  using std::swap;
  file_.Swap(&other->file_);
  swap(headmode_, other->headmode_);
  swap(day_, other->day_);
  swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgLogFile::GetMetadata() const {
  protobuf_log_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_log_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgLogFile

// uint32 HeadMode = 1;
void MsgLogFile::clear_headmode() {
  headmode_ = 0u;
}
::google::protobuf::uint32 MsgLogFile::headmode() const {
  // @@protoc_insertion_point(field_get:UTIL_LOG.MsgLogFile.HeadMode)
  return headmode_;
}
void MsgLogFile::set_headmode(::google::protobuf::uint32 value) {
  
  headmode_ = value;
  // @@protoc_insertion_point(field_set:UTIL_LOG.MsgLogFile.HeadMode)
}

// string File = 2;
void MsgLogFile::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgLogFile::file() const {
  // @@protoc_insertion_point(field_get:UTIL_LOG.MsgLogFile.File)
  return file_.GetNoArena();
}
void MsgLogFile::set_file(const ::std::string& value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UTIL_LOG.MsgLogFile.File)
}
#if LANG_CXX11
void MsgLogFile::set_file(::std::string&& value) {
  
  file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UTIL_LOG.MsgLogFile.File)
}
#endif
void MsgLogFile::set_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UTIL_LOG.MsgLogFile.File)
}
void MsgLogFile::set_file(const char* value, size_t size) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UTIL_LOG.MsgLogFile.File)
}
::std::string* MsgLogFile::mutable_file() {
  
  // @@protoc_insertion_point(field_mutable:UTIL_LOG.MsgLogFile.File)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgLogFile::release_file() {
  // @@protoc_insertion_point(field_release:UTIL_LOG.MsgLogFile.File)
  
  return file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgLogFile::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    
  } else {
    
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:UTIL_LOG.MsgLogFile.File)
}

// uint32 Day = 3;
void MsgLogFile::clear_day() {
  day_ = 0u;
}
::google::protobuf::uint32 MsgLogFile::day() const {
  // @@protoc_insertion_point(field_get:UTIL_LOG.MsgLogFile.Day)
  return day_;
}
void MsgLogFile::set_day(::google::protobuf::uint32 value) {
  
  day_ = value;
  // @@protoc_insertion_point(field_set:UTIL_LOG.MsgLogFile.Day)
}

// uint32 Size = 4;
void MsgLogFile::clear_size() {
  size_ = 0u;
}
::google::protobuf::uint32 MsgLogFile::size() const {
  // @@protoc_insertion_point(field_get:UTIL_LOG.MsgLogFile.Size)
  return size_;
}
void MsgLogFile::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:UTIL_LOG.MsgLogFile.Size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgLogContent::kFileFieldNumber;
const int MsgLogContent::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgLogContent::MsgLogContent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_log_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UTIL_LOG.MsgLogContent)
}
MsgLogContent::MsgLogContent(const MsgLogContent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file().size() > 0) {
    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  // @@protoc_insertion_point(copy_constructor:UTIL_LOG.MsgLogContent)
}

void MsgLogContent::SharedCtor() {
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MsgLogContent::~MsgLogContent() {
  // @@protoc_insertion_point(destructor:UTIL_LOG.MsgLogContent)
  SharedDtor();
}

void MsgLogContent::SharedDtor() {
  file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgLogContent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgLogContent::descriptor() {
  protobuf_log_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_log_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgLogContent& MsgLogContent::default_instance() {
  protobuf_log_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgLogContent* MsgLogContent::New(::google::protobuf::Arena* arena) const {
  MsgLogContent* n = new MsgLogContent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgLogContent::Clear() {
// @@protoc_insertion_point(message_clear_start:UTIL_LOG.MsgLogContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MsgLogContent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UTIL_LOG.MsgLogContent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string File = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file().data(), static_cast<int>(this->file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UTIL_LOG.MsgLogContent.File"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UTIL_LOG.MsgLogContent.Content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UTIL_LOG.MsgLogContent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UTIL_LOG.MsgLogContent)
  return false;
#undef DO_
}

void MsgLogContent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UTIL_LOG.MsgLogContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string File = 1;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UTIL_LOG.MsgLogContent.File");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file(), output);
  }

  // string Content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UTIL_LOG.MsgLogContent.Content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UTIL_LOG.MsgLogContent)
}

::google::protobuf::uint8* MsgLogContent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UTIL_LOG.MsgLogContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string File = 1;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UTIL_LOG.MsgLogContent.File");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file(), target);
  }

  // string Content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UTIL_LOG.MsgLogContent.Content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UTIL_LOG.MsgLogContent)
  return target;
}

size_t MsgLogContent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UTIL_LOG.MsgLogContent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string File = 1;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file());
  }

  // string Content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgLogContent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UTIL_LOG.MsgLogContent)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgLogContent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgLogContent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UTIL_LOG.MsgLogContent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UTIL_LOG.MsgLogContent)
    MergeFrom(*source);
  }
}

void MsgLogContent::MergeFrom(const MsgLogContent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UTIL_LOG.MsgLogContent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void MsgLogContent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UTIL_LOG.MsgLogContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLogContent::CopyFrom(const MsgLogContent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UTIL_LOG.MsgLogContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLogContent::IsInitialized() const {
  return true;
}

void MsgLogContent::Swap(MsgLogContent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgLogContent::InternalSwap(MsgLogContent* other) {
  using std::swap;
  file_.Swap(&other->file_);
  content_.Swap(&other->content_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgLogContent::GetMetadata() const {
  protobuf_log_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_log_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgLogContent

// string File = 1;
void MsgLogContent::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgLogContent::file() const {
  // @@protoc_insertion_point(field_get:UTIL_LOG.MsgLogContent.File)
  return file_.GetNoArena();
}
void MsgLogContent::set_file(const ::std::string& value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UTIL_LOG.MsgLogContent.File)
}
#if LANG_CXX11
void MsgLogContent::set_file(::std::string&& value) {
  
  file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UTIL_LOG.MsgLogContent.File)
}
#endif
void MsgLogContent::set_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UTIL_LOG.MsgLogContent.File)
}
void MsgLogContent::set_file(const char* value, size_t size) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UTIL_LOG.MsgLogContent.File)
}
::std::string* MsgLogContent::mutable_file() {
  
  // @@protoc_insertion_point(field_mutable:UTIL_LOG.MsgLogContent.File)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgLogContent::release_file() {
  // @@protoc_insertion_point(field_release:UTIL_LOG.MsgLogContent.File)
  
  return file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgLogContent::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    
  } else {
    
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:UTIL_LOG.MsgLogContent.File)
}

// string Content = 2;
void MsgLogContent::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgLogContent::content() const {
  // @@protoc_insertion_point(field_get:UTIL_LOG.MsgLogContent.Content)
  return content_.GetNoArena();
}
void MsgLogContent::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UTIL_LOG.MsgLogContent.Content)
}
#if LANG_CXX11
void MsgLogContent::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UTIL_LOG.MsgLogContent.Content)
}
#endif
void MsgLogContent::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UTIL_LOG.MsgLogContent.Content)
}
void MsgLogContent::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UTIL_LOG.MsgLogContent.Content)
}
::std::string* MsgLogContent::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:UTIL_LOG.MsgLogContent.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgLogContent::release_content() {
  // @@protoc_insertion_point(field_release:UTIL_LOG.MsgLogContent.Content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgLogContent::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:UTIL_LOG.MsgLogContent.Content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgLogControl::kCmdFieldNumber;
const int MsgLogControl::kCmdFlagFieldNumber;
const int MsgLogControl::kTimestampFieldNumber;
const int MsgLogControl::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgLogControl::MsgLogControl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_log_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UTIL_LOG.MsgLogControl)
}
MsgLogControl::MsgLogControl(const MsgLogControl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&cmd_, &from.cmd_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&cmd_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:UTIL_LOG.MsgLogControl)
}

void MsgLogControl::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(timestamp_));
  _cached_size_ = 0;
}

MsgLogControl::~MsgLogControl() {
  // @@protoc_insertion_point(destructor:UTIL_LOG.MsgLogControl)
  SharedDtor();
}

void MsgLogControl::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgLogControl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgLogControl::descriptor() {
  protobuf_log_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_log_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgLogControl& MsgLogControl::default_instance() {
  protobuf_log_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgLogControl* MsgLogControl::New(::google::protobuf::Arena* arena) const {
  MsgLogControl* n = new MsgLogControl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgLogControl::Clear() {
// @@protoc_insertion_point(message_clear_start:UTIL_LOG.MsgLogControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(timestamp_));
  _internal_metadata_.Clear();
}

bool MsgLogControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UTIL_LOG.MsgLogControl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .UTIL_LOG.MsgLogControl.CmdType Cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cmd(static_cast< ::UTIL_LOG::MsgLogControl_CmdType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CmdFlag = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmdflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UTIL_LOG.MsgLogControl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UTIL_LOG.MsgLogControl)
  return false;
#undef DO_
}

void MsgLogControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UTIL_LOG.MsgLogControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .UTIL_LOG.MsgLogControl.CmdType Cmd = 1;
  if (this->cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // uint32 CmdFlag = 2;
  if (this->cmdflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cmdflag(), output);
  }

  // uint32 Timestamp = 3;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->timestamp(), output);
  }

  // bytes Data = 4;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UTIL_LOG.MsgLogControl)
}

::google::protobuf::uint8* MsgLogControl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UTIL_LOG.MsgLogControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .UTIL_LOG.MsgLogControl.CmdType Cmd = 1;
  if (this->cmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // uint32 CmdFlag = 2;
  if (this->cmdflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cmdflag(), target);
  }

  // uint32 Timestamp = 3;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->timestamp(), target);
  }

  // bytes Data = 4;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UTIL_LOG.MsgLogControl)
  return target;
}

size_t MsgLogControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UTIL_LOG.MsgLogControl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes Data = 4;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // .UTIL_LOG.MsgLogControl.CmdType Cmd = 1;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }

  // uint32 CmdFlag = 2;
  if (this->cmdflag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmdflag());
  }

  // uint32 Timestamp = 3;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgLogControl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UTIL_LOG.MsgLogControl)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgLogControl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgLogControl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UTIL_LOG.MsgLogControl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UTIL_LOG.MsgLogControl)
    MergeFrom(*source);
  }
}

void MsgLogControl::MergeFrom(const MsgLogControl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UTIL_LOG.MsgLogControl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.cmd() != 0) {
    set_cmd(from.cmd());
  }
  if (from.cmdflag() != 0) {
    set_cmdflag(from.cmdflag());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void MsgLogControl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UTIL_LOG.MsgLogControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLogControl::CopyFrom(const MsgLogControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UTIL_LOG.MsgLogControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLogControl::IsInitialized() const {
  return true;
}

void MsgLogControl::Swap(MsgLogControl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgLogControl::InternalSwap(MsgLogControl* other) {
  using std::swap;
  data_.Swap(&other->data_);
  swap(cmd_, other->cmd_);
  swap(cmdflag_, other->cmdflag_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgLogControl::GetMetadata() const {
  protobuf_log_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_log_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgLogControl

// .UTIL_LOG.MsgLogControl.CmdType Cmd = 1;
void MsgLogControl::clear_cmd() {
  cmd_ = 0;
}
::UTIL_LOG::MsgLogControl_CmdType MsgLogControl::cmd() const {
  // @@protoc_insertion_point(field_get:UTIL_LOG.MsgLogControl.Cmd)
  return static_cast< ::UTIL_LOG::MsgLogControl_CmdType >(cmd_);
}
void MsgLogControl::set_cmd(::UTIL_LOG::MsgLogControl_CmdType value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:UTIL_LOG.MsgLogControl.Cmd)
}

// uint32 CmdFlag = 2;
void MsgLogControl::clear_cmdflag() {
  cmdflag_ = 0u;
}
::google::protobuf::uint32 MsgLogControl::cmdflag() const {
  // @@protoc_insertion_point(field_get:UTIL_LOG.MsgLogControl.CmdFlag)
  return cmdflag_;
}
void MsgLogControl::set_cmdflag(::google::protobuf::uint32 value) {
  
  cmdflag_ = value;
  // @@protoc_insertion_point(field_set:UTIL_LOG.MsgLogControl.CmdFlag)
}

// uint32 Timestamp = 3;
void MsgLogControl::clear_timestamp() {
  timestamp_ = 0u;
}
::google::protobuf::uint32 MsgLogControl::timestamp() const {
  // @@protoc_insertion_point(field_get:UTIL_LOG.MsgLogControl.Timestamp)
  return timestamp_;
}
void MsgLogControl::set_timestamp(::google::protobuf::uint32 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:UTIL_LOG.MsgLogControl.Timestamp)
}

// bytes Data = 4;
void MsgLogControl::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgLogControl::data() const {
  // @@protoc_insertion_point(field_get:UTIL_LOG.MsgLogControl.Data)
  return data_.GetNoArena();
}
void MsgLogControl::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UTIL_LOG.MsgLogControl.Data)
}
#if LANG_CXX11
void MsgLogControl::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UTIL_LOG.MsgLogControl.Data)
}
#endif
void MsgLogControl::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UTIL_LOG.MsgLogControl.Data)
}
void MsgLogControl::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UTIL_LOG.MsgLogControl.Data)
}
::std::string* MsgLogControl::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:UTIL_LOG.MsgLogControl.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgLogControl::release_data() {
  // @@protoc_insertion_point(field_release:UTIL_LOG.MsgLogControl.Data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgLogControl::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:UTIL_LOG.MsgLogControl.Data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace UTIL_LOG

// @@protoc_insertion_point(global_scope)
